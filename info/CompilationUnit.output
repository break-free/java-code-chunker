CompilationUnit(
    imports=[],
    package=PackageDeclaration(
        annotations=None,
        documentation=/**
            * Licensed to the Apache Software Foundation (ASF) under one
            * or more contributor license agreements. See the NOTICE file
            * distributed with this work for additional information
            * regarding copyright ownership. The ASF licenses this file
            * to you under the Apache License, Version 2.0 (the
            * "License"); you may not use this file except in compliance
            * with the License. You may obtain a copy of the License at
            *
            * http://www.apache.org/licenses/LICENSE-2.0
            *
            * Unless required by applicable law or agreed to in writing,
            * software distributed under the License is distributed on an
            * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
            * KIND, either express or implied. See the License for the
            * specific language governing permissions and limitations
            * under the License.
            */,
        modifiers=None,
        name=org.apache.fineract.portfolio.accountdetails.domain
    ),
    types=[
        EnumDeclaration(
            annotations=[],
            body=EnumBody(
                constants=[
                    EnumConstantDeclaration(
                        annotations=[],
                        arguments=[
                            Literal(
                                postfix_operators=[],
                                prefix_operators=[],
                                qualifier=None,
                                selectors=[],
                                value=0
                            ),
                            Literal(
                                postfix_operators=[],
                                prefix_operators=[],
                                qualifier=None,
                                selectors=[],
                                value="accountType.invalid"
                            )
                        ],
                        body=None,
                        documentation=None,
                        modifiers=None,
                        name=INVALID
                    ),
                    EnumConstantDeclaration(
                        annotations=[],
                        arguments=[
                            Literal(
                                postfix_operators=[],
                                prefix_operators=[],
                                qualifier=None,
                                selectors=[],
                                value=1
                            ),
                            Literal(
                                postfix_operators=[],
                                prefix_operators=[],
                                qualifier=None,
                                selectors=[],
                                value="accountType.individual"
                            )
                        ],
                        body=None,
                        documentation=None,
                        modifiers=None,
                        name=INDIVIDUAL
                    ),
                    EnumConstantDeclaration(
                        annotations=[],
                        arguments=[
                            Literal(
                                postfix_operators=[],
                                prefix_operators=[],
                                qualifier=None,
                                selectors=[],
                                value=2
                            ),
                            Literal(
                                postfix_operators=[],
                                prefix_operators=[],
                                qualifier=None,
                                selectors=[],
                                value="accountType.group"
                            )
                        ],
                        body=None,
                        documentation=None,
                        modifiers=None,
                        name=GROUP
                    ),
                    EnumConstantDeclaration(
                        annotations=[],
                        arguments=[
                            Literal(
                                postfix_operators=[],
                                prefix_operators=[],
                                qualifier=None,
                                selectors=[],
                                value=3
                            ),
                            Literal(
                                postfix_operators=[],
                                prefix_operators=[],
                                qualifier=None,
                                selectors=[],
                                value="accountType.jlg"
                            )
                        ],
                        body=None,
                        documentation=None,
                        modifiers=None,
                        name=JLG
                    ),
                    EnumConstantDeclaration(
                        annotations=[],
                        arguments=[
                            Literal(
                                postfix_operators=[],
                                prefix_operators=[],
                                qualifier=None,
                                selectors=[],
                                value=4
                            ),
                            Literal(
                                postfix_operators=[],
                                prefix_operators=[],
                                qualifier=None,
                                selectors=[],
                                value="accountType.glim"
                            )
                        ],
                        body=None,
                        documentation=None,
                        modifiers=None,
                        name=GLIM
                    ),
                    EnumConstantDeclaration(
                        annotations=[],
                        arguments=[
                            Literal(
                                postfix_operators=[],
                                prefix_operators=[],
                                qualifier=None,
                                selectors=[],
                                value=5
                            ),
                            Literal(
                                postfix_operators=[],
                                prefix_operators=[],
                                qualifier=None,
                                selectors=[],
                                value="accountType.gsim"
                            )
                        ],
                        body=None,
                        documentation=None,
                        modifiers=None,
                        name=GSIM
                    )
                ],
                declarations=[
                    FieldDeclaration(
                        annotations=[],
                        declarators=[
                            VariableDeclarator(
                                dimensions=[],
                                initializer=None,
                                name=value
                            )
                        ],
                        documentation=None,
                        modifiers={'private', 'final'},
                        type=ReferenceType(
                            arguments=None,
                            dimensions=[],
                            name=Integer,
                            sub_type=None
                        )
                    ),
                    FieldDeclaration(
                        annotations=[],
                        declarators=[
                            VariableDeclarator(
                                dimensions=[],
                                initializer=None,
                                name=code
                            )
                        ],
                        documentation=None,
                        modifiers={'private', 'final'},
                        type=ReferenceType(
                            arguments=None,
                            dimensions=[],
                            name=String,
                            sub_type=None
                        )
                    ),
                    ConstructorDeclaration(
                        annotations=[],
                        body=[
                            StatementExpression(
                                expression=Assignment(
                                    expressionl=This(
                                        postfix_operators=[],
                                        prefix_operators=[],
                                        qualifier=None,
                                        selectors=[
                                            MemberReference(
                                                member=value,
                                                postfix_operators=None,
                                                prefix_operators=None,
                                                qualifier=None,
                                                selectors=None
                                            )
                                        ]
                                    ),
                                    type==,
                                    value=MemberReference(
                                        member=value,
                                        postfix_operators=[],
                                        prefix_operators=[],
                                        qualifier=,
                                        selectors=[]
                                    )
                                ),
                                label=None
                            ),
                            StatementExpression(
                                expression=Assignment(
                                    expressionl=This(
                                        postfix_operators=[],
                                        prefix_operators=[],
                                        qualifier=None, selectors=[
                                            MemberReference(
                                                member=code,
                                                postfix_operators=None,
                                                prefix_operators=None,
                                                qualifier=None,
                                                selectors=None
                                            )
                                        ]
                                    ),
                                    type==,
                                    value=MemberReference(
                                        member=code,
                                        postfix_operators=[],
                                        prefix_operators=[],
                                        qualifier=,
                                        selectors=[]
                                    )
                                ),
                                label=None
                            )
                        ],
                        documentation=None,
                        modifiers=set(),
                        name=AccountType,
                        parameters=[
                            FormalParameter(
                                annotations=[],
                                modifiers={'final'},
                                name=value,
                                type=ReferenceType(
                                    arguments=None,
                                    dimensions=[],
                                    name=Integer,
                                    sub_type=None
                                ),
                                varargs=False
                            ),
                            FormalParameter(
                                annotations=[],
                                modifiers={'final'},
                                name=code,
                                type=ReferenceType(
                                    arguments=None,
                                    dimensions=[],
                                    name=String,
                                    sub_type=None
                                ),
                                varargs=False
                            )
                        ],
                        throws=None,
                        type_parameters=None
                    ),
                    MethodDeclaration(
                        annotations=[],
                        body=[
                            LocalVariableDeclaration(
                                annotations=[],
                                declarators=[
                                    VariableDeclarator(
                                        dimensions=[],
                                        initializer=MemberReference(
                                            member=INVALID,
                                            postfix_operators=[],
                                            prefix_operators=[],
                                            qualifier=AccountType,
                                            selectors=[]
                                        ),
                                        name=enumeration
                                    )
                                ],
                                modifiers=set(),
                                type=ReferenceType(
                                    arguments=None,
                                    dimensions=[],
                                    name=AccountType,
                                    sub_type=None
                                )
                            ),
                            SwitchStatement(
                                cases=[
                                    SwitchStatementCase(
                                        case=[
                                            Literal(
                                                postfix_operators=[],
                                                prefix_operators=[],
                                                qualifier=None,
                                                selectors=[],
                                                value=1
                                            )
                                        ],
                                        statements=[
                                            StatementExpression(
                                                expression=Assignment(
                                                    expressionl=MemberReference(
                                                        member=enumeration,
                                                        postfix_operators=[],
                                                        prefix_operators=[],
                                                        qualifier=,
                                                        selectors=[]
                                                    ),
                                                    type==,
                                                    value=MemberReference(
                                                        member=INDIVIDUAL,
                                                        postfix_operators=[],
                                                        prefix_operators=[],
                                                        qualifier=AccountType,
                                                        selectors=[]
                                                    )
                                                ),
                                                label=None
                                            ),
                                            BreakStatement(
                                                goto=None,
                                                label=None
                                            )
                                        ]
                                    ),
                                    SwitchStatementCase(case=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)], statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=enumeration, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=GROUP, postfix_operators=[], prefix_operators=[], qualifier=AccountType, selectors=[])), label=None), BreakStatement(goto=None, label=None)]),
                                    SwitchStatementCase(case=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)], statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=enumeration, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=JLG, postfix_operators=[], prefix_operators=[], qualifier=AccountType, selectors=[])), label=None), BreakStatement(goto=None, label=None)]),
                                    SwitchStatementCase(case=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4)], statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=enumeration, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=GLIM, postfix_operators=[], prefix_operators=[], qualifier=AccountType, selectors=[])), label=None), BreakStatement(goto=None, label=None)]),
                                    SwitchStatementCase(
                                        case=[
                                            Literal(
                                                postfix_operators=[],
                                                prefix_operators=[],
                                                qualifier=None,
                                                selectors=[],
                                                value=5
                                            )
                                        ],
                                        statements=[
                                            StatementExpression(
                                                expression=Assignment(
                                                    expressionl=MemberReference(
                                                        member=enumeration,
                                                        postfix_operators=[],
                                                        prefix_operators=[],
                                                        qualifier=,
                                                        selectors=[]
                                                    ),
                                                    type==,
                                                    value=MemberReference(
                                                        member=GSIM,
                                                        postfix_operators=[],
                                                        prefix_operators=[],
                                                        qualifier=AccountType,
                                                        selectors=[]
                                                    )
                                                ),
                                                label=None
                                            ),
                                            BreakStatement(
                                                goto=None,
                                                label=None
                                            )
                                        ]
                                    )
                                ],
                                expression=MemberReference(
                                    member=accountTypeValue,
                                    postfix_operators=[],
                                    prefix_operators=[],
                                    qualifier=,
                                    selectors=[]
                                ),
                                label=None
                            ),
                            ReturnStatement(
                                expression=MemberReference(
                                    member=enumeration,
                                    postfix_operators=[],
                                    prefix_operators=[],
                                    qualifier=,
                                    selectors=[]
                                ),
                                label=None
                            )
                        ],
                        documentation=None,
                        modifiers={'public', 'static'},
                        name=fromInt,
                        parameters=[
                            FormalParameter(
                                annotations=[],
                                modifiers={'final'},
                                name=accountTypeValue,
                                type=ReferenceType(
                                    arguments=None,
                                    dimensions=[],
                                    name=Integer,
                                    sub_type=None
                                ),
                                varargs=False
                            )
                        ],
                        return_type=ReferenceType(
                            arguments=None,
                            dimensions=[],
                            name=AccountType,
                            sub_type=None
                        ),
                        throws=None,
                        type_parameters=None
                    ),
                    MethodDeclaration(
                        annotations=[],
                        body=[
                            LocalVariableDeclaration(
                                annotations=[],
                                declarators=[
                                    VariableDeclarator(
                                        dimensions=[],
                                        initializer=MemberReference(
                                            member=INVALID,
                                            postfix_operators=[],
                                            prefix_operators=[],
                                            qualifier=AccountType,
                                            selectors=[]
                                        ),
                                        name=accountType
                                    )
                                ],
                                modifiers=set(),
                                type=ReferenceType(
                                    arguments=None,
                                    dimensions=[],
                                    name=AccountType,
                                    sub_type=None
                                )
                            ),
                            ForStatement(
                                body=BlockStatement(
                                    label=None,
                                    statements=[
                                        IfStatement(
                                            condition=MethodInvocation(
                                                arguments=[],
                                                member=getName,
                                                postfix_operators=[],
                                                prefix_operators=[],
                                                qualifier=type,
                                                selectors=[
                                                    MethodInvocation(
                                                        arguments=[
                                                            MemberReference(
                                                                member=name,
                                                                postfix_operators=[],
                                                                prefix_operators=[],
                                                                qualifier=,
                                                                selectors=[]
                                                            )
                                                        ],
                                                        member=equals,
                                                        postfix_operators=None,
                                                        prefix_operators=None,
                                                        qualifier=None,
                                                        selectors=None,
                                                        type_arguments=None
                                                    )
                                                ],
                                                type_arguments=None
                                            ),
                                            else_statement=None,
                                            label=None,
                                            then_statement=BlockStatement(
                                                label=None,
                                                statements=[
                                                    StatementExpression(
                                                        expression=Assignment(
                                                            expressionl=MemberReference(
                                                                member=accountType,
                                                                postfix_operators=[],
                                                                prefix_operators=[],
                                                                qualifier=,
                                                                selectors=[]
                                                            ),
                                                            type==,
                                                            value=MemberReference(
                                                                member=type,
                                                                postfix_operators=[],
                                                                prefix_operators=[],
                                                                qualifier=,
                                                                selectors=[]
                                                            )
                                                        ),
                                                        label=None
                                                    ),
                                                    BreakStatement(
                                                        goto=None,
                                                        label=None
                                                    )
                                                ]
                                            )
                                        )
                                    ]
                                ),
                                control=EnhancedForControl(
                                    iterable=MethodInvocation(
                                        arguments=[],
                                            member=values,
                                            postfix_operators=[],
                                            prefix_operators=[],
                                            qualifier=AccountType,
                                            selectors=[],
                                            type_arguments=None
                                    ),
                                    var=VariableDeclaration(
                                        annotations=[],
                                        declarators=[
                                            VariableDeclarator(
                                                dimensions=None,
                                                initializer=None,
                                                name=type
                                            )
                                        ],
                                        modifiers={'final'},
                                        type=ReferenceType(
                                            arguments=None,
                                            dimensions=[],
                                            name=AccountType,
                                            sub_type=None
                                        )
                                    )
                                ),
                                label=None
                            ),
                            ReturnStatement(
                                expression=MemberReference(
                                    member=accountType,
                                    postfix_operators=[],
                                    prefix_operators=[],
                                    qualifier=,
                                    selectors=[]
                                ),
                                label=None
                            )
                        ],
                        documentation=None,
                        modifiers={'public', 'static'},
                        name=fromName,
                        parameters=[
                            FormalParameter(
                                annotations=[],
                                modifiers={'final'},
                                name=name,
                                type=ReferenceType(
                                    arguments=None,
                                    dimensions=[],
                                    name=String,
                                    sub_type=None
                                ),
                                varargs=False
                            )
                        ],
                        return_type=ReferenceType(
                            arguments=None,
                            dimensions=[],
                            name=AccountType,
                            sub_type=None
                        ),
                        throws=None,
                        type_parameters=None
                    ),
                    MethodDeclaration(
                        annotations=[],
                        body=[
                            ReturnStatement(
                                expression=This(
                                    postfix_operators=[],
                                    prefix_operators=[],
                                    qualifier=None,
                                    selectors=[
                                        MemberReference(
                                            member=value,
                                            postfix_operators=None,
                                            prefix_operators=None,
                                            qualifier=None,
                                            selectors=None
                                        )
                                    ]
                                ),
                                label=None
                            )
                        ],
                        documentation=None,
                        modifiers={'public'},
                        name=getValue,
                        parameters=[],
                        return_type=ReferenceType(
                            arguments=None,
                            dimensions=[],
                            name=Integer,
                            sub_type=None
                        ),
                        throws=None,
                        type_parameters=None
                    ),
                    MethodDeclaration(
                        annotations=[],
                        body=[
                            ReturnStatement(
                                expression=This(
                                    postfix_operators=[],
                                    prefix_operators=[],
                                    qualifier=None,
                                    selectors=[
                                        MemberReference(
                                            member=code,
                                            postfix_operators=None,
                                            prefix_operators=None,
                                            qualifier=None,
                                            selectors=None
                                        )
                                    ]
                                ),
                                label=None
                            )
                        ],
                        documentation=None,
                        modifiers={'public'},
                        name=getCode,
                        parameters=[],
                        return_type=ReferenceType(
                            arguments=None,
                            dimensions=[],
                            name=String,
                            sub_type=None
                        ),
                        throws=None,
                        type_parameters=None
                    ),
                    MethodDeclaration(
                        annotations=[],
                        body=[
                            ReturnStatement(
                                expression=MethodInvocation(
                                    arguments=[],
                                    member=name,
                                    postfix_operators=[],
                                    prefix_operators=[],
                                    qualifier=,
                                    selectors=[
                                        MethodInvocation(
                                            arguments=[],
                                            member=toLowerCase,
                                            postfix_operators=None,
                                            prefix_operators=None,
                                            qualifier=None,
                                            selectors=None,
                                            type_arguments=None
                                        )
                                    ],
                                    type_arguments=None
                                ),
                                label=None
                            )
                        ],
                        documentation=None,
                        modifiers={'public'},
                        name=getName,
                        parameters=[],
                        return_type=ReferenceType(
                            arguments=None,
                            dimensions=[],
                            name=String,
                            sub_type=None
                        ),
                        throws=None,
                        type_parameters=None
                    ),
                    MethodDeclaration(
                        annotations=[],
                        body=[
                            ReturnStatement(
                                expression=This(
                                    postfix_operators=[],
                                    prefix_operators=[],
                                    qualifier=None,
                                    selectors=[
                                        MemberReference(
                                            member=value,
                                            postfix_operators=None,
                                            prefix_operators=None,
                                            qualifier=None,
                                            selectors=None
                                        ),
                                        MethodInvocation(
                                            arguments=[
                                                MethodInvocation(
                                                    arguments=[],
                                                    member=getValue,
                                                    postfix_operators=[],
                                                    prefix_operators=[],
                                                    qualifier=AccountType.INVALID,
                                                    selectors=[],
                                                    type_arguments=None
                                                )
                                            ],
                                            member=equals,
                                            postfix_operators=None,
                                            prefix_operators=None,
                                            qualifier=None,
                                            selectors=None,
                                            type_arguments=None
                                        )
                                    ]
                                ),
                                label=None
                            )
                        ],
                        documentation=None,
                        modifiers={'public'},
                        name=isInvalid,
                        parameters=[],
                        return_type=BasicType(
                            dimensions=[],
                            name=boolean
                        ),
                        throws=None,
                        type_parameters=None
                    ),
                    MethodDeclaration(
                        annotations=[],
                        body=[
                            ReturnStatement(
                                expression=This(
                                    postfix_operators=[],
                                    prefix_operators=[],
                                    qualifier=None,
                                    selectors=[
                                        MemberReference(
                                            member=value,
                                            postfix_operators=None,
                                            prefix_operators=None,
                                            qualifier=None,
                                            selectors=None
                                        ),
                                        MethodInvocation(
                                            arguments=[
                                                MethodInvocation(
                                                    arguments=[],
                                                    member=getValue,
                                                    postfix_operators=[],
                                                    prefix_operators=[],
                                                    qualifier=AccountType.INDIVIDUAL,
                                                    selectors=[],
                                                    type_arguments=None
                                                )
                                            ],
                                            member=equals,
                                            postfix_operators=None,
                                            prefix_operators=None,
                                            qualifier=None,
                                            selectors=None,
                                            type_arguments=None
                                        )
                                    ]
                                ),
                                label=None
                            )
                        ],
                        documentation=None,
                        modifiers={'public'},
                        name=isIndividualAccount,
                        parameters=[],
                        return_type=BasicType(
                            dimensions=[],
                            name=boolean
                        ),
                        throws=None,
                        type_parameters=None
                    ),
                    MethodDeclaration(
                        annotations=[],
                        body=[
                            ReturnStatement(
                                expression=This(
                                    postfix_operators=[],
                                    prefix_operators=[],
                                    qualifier=None,
                                    selectors=[
                                        MemberReference(
                                            member=value,
                                            postfix_operators=None,
                                            prefix_operators=None,
                                            qualifier=None,
                                            selectors=None
                                        ),
                                        MethodInvocation(
                                            arguments=[
                                                MethodInvocation(
                                                    arguments=[],
                                                    member=getValue,
                                                    postfix_operators=[],
                                                    prefix_operators=[],
                                                    qualifier=AccountType.GROUP,
                                                    selectors=[],
                                                    type_arguments=None
                                                )
                                            ],
                                            member=equals,
                                            postfix_operators=None,
                                            prefix_operators=None,
                                            qualifier=None,
                                            selectors=None,
                                            type_arguments=None
                                        )
                                    ]
                                ),
                                label=None
                            )
                        ],
                        documentation=None,
                        modifiers={'public'},
                        name=isGroupAccount,
                        parameters=[],
                        return_type=BasicType(
                            dimensions=[],
                            name=boolean
                        ),
                        throws=None,
                        type_parameters=None
                    ),
                    MethodDeclaration(
                        annotations=[],
                        body=[
                            ReturnStatement(
                                expression=This(
                                    postfix_operators=[],
                                    prefix_operators=[],
                                    qualifier=None,
                                    selectors=[
                                        MemberReference(
                                            member=value,
                                            postfix_operators=None,
                                            prefix_operators=None,
                                            qualifier=None,
                                            selectors=None
                                        ),
                                        MethodInvocation(
                                            arguments=[
                                                MethodInvocation(
                                                    arguments=[],
                                                    member=getValue,
                                                    postfix_operators=[],
                                                    prefix_operators=[],
                                                    qualifier=AccountType.JLG,
                                                    selectors=[],
                                                    type_arguments=None
                                                )
                                            ],
                                            member=equals,
                                            postfix_operators=None,
                                            prefix_operators=None,
                                            qualifier=None,
                                            selectors=None,
                                            type_arguments=None
                                        )
                                    ]
                                ),
                                label=None
                            )
                        ],
                        documentation=None,
                        modifiers={'public'},
                        name=isJLGAccount,
                        parameters=[],
                        return_type=BasicType(
                            dimensions=[],
                            name=boolean),
                            throws=None,
                            type_parameters=None
                        ),
                        MethodDeclaration(
                            annotations=[],
                            body=[
                                ReturnStatement(
                                    expression=This(
                                        postfix_operators=[],
                                        prefix_operators=[],
                                        qualifier=None,
                                        selectors=[
                                            MemberReference(
                                                member=value,
                                                postfix_operators=None,
                                                prefix_operators=None,
                                                qualifier=None,
                                                selectors=None
                                            ),
                                            MethodInvocation(
                                                arguments=[
                                                    MethodInvocation(
                                                        arguments=[],
                                                        member=getValue,
                                                        postfix_operators=[],
                                                        prefix_operators=[],
                                                        qualifier=AccountType.GLIM,
                                                        selectors=[],
                                                        type_arguments=None
                                                    )
                                                ],
                                                member=equals,
                                                postfix_operators=None,
                                                prefix_operators=None,
                                                qualifier=None,
                                                selectors=None,
                                                type_arguments=None
                                            )
                                        ]
                                    ),
                                    label=None
                                )
                            ],
                            documentation=None,
                            modifiers={'public'},
                            name=isGLIMAccount,
                            parameters=[],
                            return_type=BasicType(
                                dimensions=[],
                                name=boolean
                            ),
                            throws=None,
                            type_parameters=None
                        ),
                        MethodDeclaration(
                            annotations=[],
                            body=[
                                ReturnStatement(
                                    expression=This(
                                        postfix_operators=[],
                                        prefix_operators=[],
                                        qualifier=None,
                                        selectors=[
                                            MemberReference(
                                                member=value,
                                                postfix_operators=None,
                                                prefix_operators=None,
                                                qualifier=None,
                                                selectors=None
                                            ),
                                            MethodInvocation(
                                                arguments=[
                                                    MethodInvocation(
                                                        arguments=[],
                                                        member=getValue,
                                                        postfix_operators=[],
                                                        prefix_operators=[],
                                                        qualifier=AccountType.GSIM,
                                                        selectors=[],
                                                        type_arguments=None
                                                    )
                                                ],
                                                member=equals,
                                                postfix_operators=None,
                                                prefix_operators=None,
                                                qualifier=None,
                                                selectors=None,
                                                type_arguments=None
                                            )
                                        ]
                                    ),
                                    label=None
                                )
                            ],
                            documentation=None,
                            modifiers={'public'},
                            name=isGSIMAccount,
                            parameters=[],
                            return_type=BasicType(
                                dimensions=[],
                                name=boolean
                            ),
                            throws=None,
                            type_parameters=None
                        )
                    ]
                ),
                documentation=/**
                    * Enum representation of account types .
                    */,
                implements=None,
                modifiers={'public'},
                name=AccountType
        )
    ]
)
